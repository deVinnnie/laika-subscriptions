plugins {
    id 'java'
    id 'groovy'
    id 'jacoco'
    id 'idea'
    id 'org.springframework.boot' version '2.1.0.RELEASE'
    id "com.bertramlabs.asset-pipeline" version '2.15.1'
    id 'com.github.kt3k.coveralls' version '2.8.2'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'laika-subscriptions'
    version =  '1.0-SNAPSHOT'
}

ext {
    springBootVersion = '2.1.0.RELEASE'
    seleniumVersion = '3.12.0'
    gebVersion = "2.1"
}

group = 'be.mira.jongeren'
version = '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

test{
    useJUnitPlatform()

    dependsOn 'cleanTest'

    testLogging {
        events "passed", "skipped", "failed"
    }
}

wrapper {
    gradleVersion = '4.10.2'
}

// Heroku Stuff
task stage(dependsOn: ['assemble']) {
}

build.mustRunAfter clean
bootJar.mustRunAfter assetCompile

repositories {
     maven { url "http://repo.maven.apache.org/maven2" }
}

sourceSets {
    integrationTest {
        groovy{
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDirs file('src/integration-test/groovy')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

dependencies {
    // Spring Boot
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-aop'
    compile 'org.springframework.boot:spring-boot-starter-mail'
    compile 'org.springframework.boot:spring-boot-starter-security'
//    compile 'org.springframework.boot:spring-boot-devtools'

    // DB
    compile group: 'com.h2database', name: 'h2', version:'1.4.197'
    compile group: 'org.postgresql', name: 'postgresql', version:'42.2.2'

    // Other
    compile group: 'ro.pippo', name: 'pippo-jade', version:'1.11.0'

    // CSS Libs: PureCSS
    compile group: 'org.webjars.npm', name: 'purecss', version:'0.6.0'

    // Test Dependencies
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile group: 'com.icegreen', name: 'greenmail', version:'1.5.5'
    testCompile group: 'com.ninja-squad', name: 'DbSetup', version:'2.1.0'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version:"${springBootVersion}"
    //testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    // Assets Pipeline
    assets('com.bertramlabs.plugins:sass-asset-pipeline:2.14.10'){
        exclude group: 'log4j', module: 'log4j'
    }
    compile 'com.google.code.gson:gson:2.8.4' // Fixes conflict with Spring-Boot

    integrationTestCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version:"${seleniumVersion}"
    integrationTestCompile  'com.google.code.gson:gson:2.8.5' // Fixes conflict with Spring-Boot

    // ---------------------------------------------
    // Geb
    // ---------------------------------------------
    integrationTestCompile 'org.w3c.css:sac:1.3' // Magic
    integrationTestCompile "org.codehaus.groovy:groovy-all:2.4.12"
    integrationTestCompile "org.seleniumhq.selenium:htmlunit-driver:2.29.0"
    integrationTestCompile "org.seleniumhq.selenium:selenium-chrome-driver:${seleniumVersion}"
    integrationTestCompile "org.gebish:geb-junit4:${gebVersion}"
}

assets {
    compileDir = "${buildDir}/resources/main/static/assets"

    minifyJs = true
    minifyCss = true
    enableSourceMaps = true
    enableDigests = false
    enableGzip = false
    maxThreads = 1
    
    includes = ["fonts/*"]
    excludes = ['**/build/*','**/*.json', '**/*.md']

    //developmentRuntime can be turned off
    developmentRuntime=false
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

bootRun {
    jvmArgs = ["-Dspring.profiles.active=development,disable-security,mock"]
    sourceResources sourceSets.main
}

idea {
    module {
        //and some extra test source dirs
        testSourceDirs += file('src/integration-test/java')
        testSourceDirs += file('src/integration-test/groovy')
        //generatedSourceDirs += file('some-extra-source-folder')
        //scopes.TEST.plus += [ configurations.integrationTest ]
        scopes.TEST.plus += [ configurations.integrationTestCompile ]
        scopes.TEST.plus += [ configurations.integrationTestRuntime ]

    }
}
