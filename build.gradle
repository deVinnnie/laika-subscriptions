plugins {
    id 'java'
    id 'jacoco'
    id 'idea'
    id 'org.springframework.boot' version '1.5.12.RELEASE'
    id "com.bertramlabs.asset-pipeline" version '2.13.1'
    id 'com.github.kt3k.coveralls' version '2.8.1'
}

jar {
    baseName = 'laika-subscriptions'
    version =  '1.0-SNAPSHOT'
}

ext {
    springBootVersion = '1.5.12.RELEASE'
    seleniumVersion = '3.3.1'
}

group = 'be.mira.jongeren'
version = '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

tasks.matching {it instanceof Test}.all {
    testLogging{
        afterTest { desc, result ->
            // Display the simple Class name.
            def match = desc.className =~ /.*\.(\p{Lu}.*)$/
            def className = match.getAt(0).getAt(1)
            logger.quiet "[${result.resultType}] ${className} > ${desc.name}"
        }

        afterSuite { desc, result ->
            // Match the outermost suite
            if (!desc.parent) {
                println "Tests run: ${result.testCount} Failures: ${result.failedTestCount} Skipped: ${result.skippedTestCount}"
            }
        }


        // Make sure output from
        // standard out or error is shown
        // in Gradle output.
        //showStandardStreams = true
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

// Heroku Stuff
task stage(dependsOn: ['assemble']) {
}

build.mustRunAfter clean

repositories {
     maven { url "http://repo.maven.apache.org/maven2" }
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDirs file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

dependencies {
    // Spring Boot
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter', version:"${springBootVersion}") {
        exclude(module: 'logback-classic')
    }
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version:"${springBootVersion}"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version:"${springBootVersion}"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version:"${springBootVersion}"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version:"${springBootVersion}"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version:"${springBootVersion}"
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version:"${springBootVersion}"

    // DB
    compile group: 'com.h2database', name: 'h2', version:'1.4.197'
    compile group: 'org.postgresql', name: 'postgresql', version:'9.4.1212'

    // Other
    compile group: 'commons-lang', name: 'commons-lang', version:'2.6'
    compile group: 'ro.pippo', name: 'pippo-jade', version:'1.3.0'

    // CSS Libs: PureCSS
    //compile group: 'org.webjars', name: 'webjars-locator', version:'0.30'
    compile group: 'org.webjars.npm', name: 'purecss', version:'0.6.0'

    // Test Dependencies
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile group: 'com.icegreen', name: 'greenmail', version:'1.5.5'
    testCompile group: 'com.ninja-squad', name: 'DbSetup', version:'2.1.0'
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version:"${springBootVersion}") {
        exclude(module: 'commons-logging')
    }

    integrationTestCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version:"${seleniumVersion}"
    integrationTestCompile group: 'org.seleniumhq.selenium', name: 'selenium-support', version:"${seleniumVersion}"

    // Assets Pipeline
    //runtime 'com.bertramlabs.plugins:asset-pipeline-spring-boot:2.13.1'
    assets 'com.bertramlabs.plugins:sass-asset-pipeline:2.13.1'
}

assets {
    compileDir = "${buildDir}/resources/main/static/assets"

    minifyJs = true
    minifyCss = true
    enableSourceMaps = true
    enableDigests = false
    enableGzip = true
    maxThreads = 2
    
    includes = ["fonts/*"]

    //developmentRuntime can be turned off
    developmentRuntime=true
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

bootRun {
    args = ["--spring.profiles.active=development,disable-security"]
    addResources = true
}

idea {
    module {
        //and some extra test source dirs
        testSourceDirs += file('src/integration-test/java')
        //generatedSourceDirs += file('some-extra-source-folder')
        //scopes.TEST.plus += [ configurations.integrationTest ]
        scopes.TEST.plus += [ configurations.integrationTestCompile ]
        scopes.TEST.plus += [ configurations.integrationTestRuntime ]

    }
}
